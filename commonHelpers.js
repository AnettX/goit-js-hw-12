import{a as d,S as h,i as L}from"./assets/vendor-64b55ca9.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const a of t)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function o(t){const a={};return t.integrity&&(a.integrity=t.integrity),t.referrerPolicy&&(a.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?a.credentials="include":t.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(t){if(t.ep)return;t.ep=!0;const a=o(t);fetch(t.href,a)}})();const m="https://pixabay.com/api/",u="42120259-494341598d0c2875f9db82d6d",p=15;class b{constructor(){}async getImages(r){const o={key:u,q:r,page:1,per_page:p},s=`${m}`;return d.get(s,{params:o}).then(t=>t.data)}async getMoreImages(r,o){o++;const s={key:u,q:r,page:o,per_page:p},t=`${m}`;return d.get(t,{params:s}).then(a=>a.data)}}const E={captionsData:"alt",captionDelay:250};let g=new h(".gallery-link",E);function M(e,r){const o=e.hits.map(s=>f(s)).join("");r.innerHTML=o,g.refresh()}function w(e,r){const o=e.hits.map(s=>f(s)).join("");r.insertAdjacentHTML("beforeend",o),g.refresh()}function P(){L.error({position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!"})}function f(e){return`
        <div class="photo-container">
            <a class="gallery-link" href="${e.largeImageURL}" data-lightbox="image">
                <img src="${e.webformatURL}" alt="${e.tags}" class="photo" />
            </a>
            <div class="photo-body">
                <p class="photo-name">Likes ${e.likes}</p>
                <p class="photo-name">Views ${e.views}</p>
                <p class="photo-name">Comments ${e.comments}</p>
                <p class="photo-name">Downloads ${e.downloads}</p>
            </div>
        </div>
    `}const n={formEl:document.querySelector(".js-search-form"),imgEl:document.querySelector(".js-image-container"),loader:document.querySelector(".loader"),btnLoadMore:document.querySelector(".loadmore-btn")};let i=1,y="";function v(){n.loader.classList.remove("hidden")}function I(){n.loader.classList.add("hidden")}n.formEl.addEventListener("submit",S);n.btnLoadMore.addEventListener("click",$);const l=new b;console.log(l);async function S(e){e.preventDefault(),v();const r=e.target.elements.text.value;y=r,i=1;try{const o=await l.getImages(r);if(M(o,n.imgEl),o.hits.length===0)throw new Error("No images found");n.btnLoadMore.style.display="block"}catch{P()}finally{I()}}async function $(){try{const e=await l.getMoreImages(y,i);w(e,n.imgEl),i++,i*PER_PAGE>=e.totalHits&&(n.btnLoadMore.style.display="none")}catch{n.btnLoadMore.style.display="block"}}
//# sourceMappingURL=commonHelpers.js.map
